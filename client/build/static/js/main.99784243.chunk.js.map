{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","pages/SearchBooks.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getMe","fetch","headers","authorization","saveBook","bookData","method","body","JSON","stringify","deleteBook","bookId","removeBookId","savedBookIds","parse","updatedSavedBookIds","filter","savedBookId","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","event","preventDefault","response","ok","Error","json","items","map","book","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","error","handleSaveBook","bookToSave","find","Auth","loggedIn","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBooks","userData","setUserData","userDataLength","Object","keys","getUserData","user","handleDeleteBook","updatedUser","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","log","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99784243.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route \n            path='/' \n            element={<SearchBooks />} \n          />\n          <Route \n            path='/saved' \n            element={<SavedBooks />} \n          />\n          <Route \n            path='*'\n            element={<h1 className='display-2'>Wrong page!</h1>}\n          />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}